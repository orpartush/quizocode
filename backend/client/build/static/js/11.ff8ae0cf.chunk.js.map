{"version":3,"sources":["cmps/SearchPanel.jsx","pages/RankPage.jsx","assets/img/trophy.svg","assets/img/like.svg"],"names":["SeachPanel","onSearch","onSort","useState","searchValue","setSearchValue","sortBy","setSortBy","useEffect","className","type","defaultValue","onChange","e","target","value","placeholder","onClick","title","RankPage","useContext","UserContext","loadUsers","users","usersToDisplay","setUsersToDisplay","sortedUsers","setSortedUsers","a","getUsers","SearchPanel","filteredUsers","filter","user","name","toLowerCase","includes","usersCopy","sortedByName","sort","b","sortedByPoints","points","sortedByLikes","likes","length","map","_id","imgUrl","role","key","src","alt","knowledge","idx","badge","category","trophyIcon","likeIcon","to","module","exports"],"mappings":"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","file":"static/js/11.ff8ae0cf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BiSearch } from 'react-icons/bi';\r\n\r\nfunction SeachPanel({ onSearch, onSort }) {\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [sortBy, setSortBy] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (sortBy === '') return;\r\n        onSort(sortBy);\r\n    }, [sortBy]);\r\n\r\n    useEffect(() => {\r\n        if (searchValue === '') onSearch('');\r\n    }, [searchValue]);\r\n\r\n    return (\r\n        <div className=\"search-panel flex align-center\">\r\n            <section className=\"search-field flex align-center\">\r\n                <BiSearch className=\"search-icon\" />\r\n                <input\r\n                    type=\"text\"\r\n                    defaultValue={searchValue}\r\n                    onChange={e => setSearchValue(e.target.value)}\r\n                    placeholder=\"Start typing to search\"\r\n                />\r\n                <button className=\"search-btn\" onClick={() => onSearch(searchValue)}>\r\n                    Search\r\n                </button>\r\n            </section>\r\n            <section className=\"group-btns\">\r\n                <button type=\"button\" title=\"Sort by names\" onClick={() => setSortBy('name')}>\r\n                    Name\r\n                </button>\r\n                <button type=\"button\" title=\"Sort by points\" onClick={() => setSortBy('points')}>\r\n                    Points\r\n                </button>\r\n                <button type=\"button\" title=\"Sort by likes\" onClick={() => setSortBy('likes')}>\r\n                    Likes\r\n                </button>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SeachPanel;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../store/contexts/UserContext';\r\nimport SearchPanel from '../cmps/SearchPanel';\r\nimport trophyIcon from '../assets/img/trophy.svg';\r\nimport likeIcon from '../assets/img/like.svg';\r\n\r\nfunction RankPage() {\r\n    const { loadUsers, users } = useContext(UserContext);\r\n    const [usersToDisplay, setUsersToDisplay] = useState([]);\r\n    const [sortedUsers, setSortedUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n            await loadUsers();\r\n        };\r\n\r\n        getUsers();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setUsersToDisplay(users);\r\n    }, [users]);\r\n\r\n    const onSearchChange = value => {\r\n        const filteredUsers = users.filter(user => user.name.toLowerCase().includes(value));\r\n        setUsersToDisplay(filteredUsers);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setUsersToDisplay(sortedUsers);\r\n    }, [sortedUsers]);\r\n\r\n    const onSortChange = value => {\r\n        const usersCopy = [...usersToDisplay];\r\n        if (value === 'name') {\r\n            const sortedByName = usersCopy.sort((a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0));\r\n            setSortedUsers(sortedByName);\r\n        } else if (value === 'points') {\r\n            const sortedByPoints = usersCopy.sort((a, b) => b.points - a.points);\r\n            setSortedUsers(sortedByPoints);\r\n        } else {\r\n            const sortedByLikes = usersCopy.sort((a, b) => b.likes - a.likes);\r\n            setSortedUsers(sortedByLikes);\r\n        }\r\n    };\r\n\r\n    const renderUsersList = () => {\r\n        return usersToDisplay.map(user => {\r\n            const { _id, imgUrl, name, role, points, likes } = user;\r\n            return (\r\n                <section className=\"user flex align-center space-between\" key={_id}>\r\n                    <section className=\"main-info flex align-center\">\r\n                        <img src={imgUrl} alt=\"User\" />\r\n                        <section className=\"user-details flex flex-column\">\r\n                            <span className=\"name\">{name}</span>\r\n                            <span className=\"role\">{role}</span>\r\n                            <section className=\"badges flex align-center\">\r\n                                {user.knowledge.map(({ badge, category }, idx) => (\r\n                                    <img src={badge} title={`Completed ${category} quiz`} key={idx} />\r\n                                ))}\r\n                            </section>\r\n                        </section>\r\n                    </section>\r\n                    <section className=\"user-states flex\">\r\n                        <div className=\"points flex flex-column self-center\" title=\"Points\">\r\n                            <img src={trophyIcon} alt=\"Points\" />\r\n                            <span>{points}</span>\r\n                        </div>\r\n                        <div className=\"likes flex flex-column\" title=\"Likes\">\r\n                            <img src={likeIcon} alt=\"Likes\" />\r\n                            <span>{likes}</span>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"check flex\">\r\n                        <Link to={`/profile/${_id}`} title=\"User Profile\">\r\n                            Profile\r\n                        </Link>\r\n                    </section>\r\n                </section>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"rank-page container\">\r\n            <header>Ranking</header>\r\n            <section className=\"search-container flex align-center space-between\">\r\n                <SearchPanel onSearch={onSearchChange} onSort={onSortChange} />\r\n            </section>\r\n            <section className=\"users-list\">{users.length > 0 && renderUsersList()}</section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RankPage;\r\n","module.exports = __webpack_public_path__ + \"static/media/trophy.2e6afe68.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.51343e1f.svg\";"],"sourceRoot":""}