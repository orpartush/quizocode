{"version":3,"sources":["services/UserService.js","store/reducers/UserReducer.js","store/contexts/UserContext.jsx","store/reducers/QuizReducer.js","services/QuizService.js","store/contexts/QuizContext.jsx","services/HttpService.js","cmps/Navbar.jsx","pages/ErrPage.jsx","cmps/Footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["UserService","query","signup","login","logout","getUser","updateUser","a","HttpService","get","users","userCred","post","newUser","_setUserSession","user","sessionStorage","clear","id","put","_id","updatedUser","setItem","JSON","stringify","UserReducer","state","action","type","loggedInUser","initialState","UserContext","createContext","UserContextProvider","children","useReducer","dispatch","_setUser","searchValue","userID","useEffect","sessionUser","parse","getLoggedInUser","Provider","value","onSignup","onLogin","getUserByID","loadUsers","QuizReducer","quizzes","currQuiz","quiz","QuizService","filterBy","category","getQuizById","quizId","addQuiz","updateQuiz","newQuestion","deleteQuiz","delete","getQuestionById","questionId","QuizContext","QuizContextProvider","question","loadQuizzes","loadQuiz","addQuestion","loadQuestionById","axios","Axios","create","withCredentials","ajax","endpoint","method","data","url","res","console","log","Navbar","useContext","useState","isBurgerClicked","setisBurgerClicked","history","useHistory","onLogout","push","Swal","fire","linksToDisplay","className","to","onClick","title","src","imgUrl","alt","e","ErrPage","Footer","href","target","rel","HomePage","lazy","AuthPage","RankPage","QuizPage","AddQuestionPage","UserProfilePage","EditProfilePage","App","fallback","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.99d670ac.chunk.js","sourcesContent":["import HttpService from './HttpService.js';\r\n\r\nexport const UserService = {\r\n    query,\r\n    signup,\r\n    login,\r\n    logout,\r\n    getUser,\r\n    updateUser,\r\n};\r\n\r\nasync function query() {\r\n    const users = await HttpService.get('user/');\r\n    return users;\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const newUser = await HttpService.post('auth/signup', userCred);\r\n    if (newUser) return _setUserSession(newUser);\r\n    else return null;\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await HttpService.post('auth/login', userCred);\r\n    return _setUserSession(user);\r\n}\r\n\r\nasync function logout() {\r\n    await HttpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\n\r\nasync function getUser(id) {\r\n    const user = await HttpService.get(`user/${id}`);\r\n    return user;\r\n}\r\n\r\nasync function updateUser(user) {\r\n    let updatedUser = await HttpService.put(`user/${user._id}`, user);\r\n    _setUserSession(updatedUser);\r\n    return updatedUser;\r\n}\r\n\r\nfunction _setUserSession(user) {\r\n    if (!user) return;\r\n    sessionStorage.setItem('user', JSON.stringify(user));\r\n    return user;\r\n}\r\n","export const UserReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.user,\r\n            };\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            };\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                loggedInUser: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport { UserReducer } from '../reducers/UserReducer.js';\r\nimport { UserService } from '../../services/UserService.js';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loggedInUser: null,\r\n};\r\n\r\n//Actions\r\nconst LOGOUT = 'LOGOUT';\r\nconst SET_USER = 'SET_USER';\r\nconst SET_USERS = 'SET_USERS';\r\n\r\nexport const UserContext = createContext(initialState);\r\n\r\nexport const UserContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(UserReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        const getLoggedInUser = async () => {\r\n            if (sessionStorage.user) {\r\n                const sessionUser = JSON.parse(sessionStorage.user);\r\n                const user = await UserService.getUser(sessionUser._id);\r\n                _setUser(user);\r\n            }\r\n        };\r\n        getLoggedInUser();\r\n    }, []);\r\n\r\n    async function onSignup(userCred) {\r\n        const user = await UserService.signup(userCred);\r\n        if (!user) return null;\r\n        _setUser(user);\r\n        return user;\r\n    }\r\n\r\n    async function onLogin(userCred) {\r\n        const user = await UserService.login(userCred);\r\n        _setUser(user);\r\n    }\r\n\r\n    async function logout() {\r\n        await UserService.logout();\r\n        dispatch({ type: LOGOUT, user: null });\r\n    }\r\n\r\n    async function loadUsers(searchValue) {\r\n        const users = await UserService.query(searchValue);\r\n        dispatch({ type: SET_USERS, users });\r\n    }\r\n\r\n    async function updateUser(user) {\r\n        let updatedUser = await UserService.updateUser(user);\r\n        _setUser(updatedUser);\r\n    }\r\n\r\n    async function getUserByID(userID) {\r\n        const user = await UserService.getUser(userID);\r\n        return user;\r\n    }\r\n\r\n    function _setUser(user) {\r\n        dispatch({ type: SET_USER, user });\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                loggedInUser: state.loggedInUser,\r\n                users: state.users,\r\n                onSignup,\r\n                onLogin,\r\n                logout,\r\n                getUserByID,\r\n                updateUser,\r\n                loadUsers,\r\n            }}\r\n        >\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n","export const QuizReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_QUIZZES':\r\n            return {\r\n                ...state,\r\n                quizzes: action.quizzes,\r\n            };\r\n        case 'SET_QUIZ':\r\n            return {\r\n                ...state,\r\n                currQuiz: action.quiz,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import HttpService from './HttpService.js';\r\n\r\nexport const QuizService = {\r\n    query,\r\n    getQuizById,\r\n    addQuiz,\r\n    updateQuiz,\r\n    deleteQuiz,\r\n    getQuestionById,\r\n};\r\n\r\nfunction query(filterBy = {}) {\r\n    if (filterBy.category) return HttpService.get(`quiz/category/${filterBy.category}`);\r\n    return HttpService.get('quiz/');\r\n}\r\n\r\nfunction getQuizById(quizId) {\r\n    return HttpService.get(`quiz/${quizId}`);\r\n}\r\n\r\nfunction getQuestionById(questionId) {\r\n    return HttpService.get(`quiz/question/${questionId}`);\r\n}\r\n\r\nfunction addQuiz(quiz) {\r\n    return HttpService.post('quiz', quiz);\r\n}\r\n\r\nfunction updateQuiz(newQuestion) {\r\n    return HttpService.put(`quiz/question`, newQuestion);\r\n}\r\n\r\nfunction deleteQuiz(quizId) {\r\n    return HttpService.delete(`quiz/${quizId}`);\r\n}\r\n","import React, { createContext, useReducer } from 'react';\r\nimport { QuizReducer } from '../reducers/QuizReducer';\r\nimport { QuizService } from '../../services/QuizService';\r\n\r\nconst initialState = {\r\n    quizzes: [],\r\n    currQuiz: null,\r\n};\r\n\r\n//Actions\r\nconst SET_QUIZZES = 'SET_QUIZZES';\r\nconst SET_QUIZ = 'SET_QUIZ';\r\n\r\nexport const QuizContext = createContext(initialState);\r\n\r\nexport const QuizContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(QuizReducer, initialState);\r\n\r\n    async function loadQuizzes() {\r\n        const quizzes = await QuizService.query();\r\n        dispatch({ type: SET_QUIZZES, quizzes });\r\n    }\r\n\r\n    async function loadQuiz(category) {\r\n        const quiz = await QuizService.query({ category });\r\n        if (typeof quiz !== 'object') return null;\r\n        dispatch({ type: SET_QUIZ, quiz });\r\n        return quiz;\r\n    }\r\n\r\n    async function loadQuestionById(questionId) {\r\n        const question = await QuizService.getQuestionById(questionId);\r\n        return question;\r\n    }\r\n\r\n    async function addQuestion(newQuestion) {\r\n        await QuizService.updateQuiz(newQuestion);\r\n    }\r\n\r\n    return (\r\n        <QuizContext.Provider\r\n            value={{\r\n                quizzes: state.quizzes,\r\n                currQuiz: state.currQuiz,\r\n                loadQuizzes,\r\n                loadQuiz,\r\n                addQuestion,\r\n                loadQuestionById,\r\n            }}\r\n        >\r\n            {children}\r\n        </QuizContext.Provider>\r\n    );\r\n};\r\n","import Axios from 'axios';\r\n\r\nconst axios = Axios.create({\r\n    withCredentials: true,\r\n});\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/api/' : '//localhost:3030/api/';\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data);\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data);\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data);\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data);\r\n    },\r\n};\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n        });\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(err, 'HTTP REQUEST IS NOT VALID');\r\n    }\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../store/contexts/UserContext';\r\nimport { HiMenuAlt3 } from 'react-icons/hi';\r\nimport { FaWindowClose } from 'react-icons/fa';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction Navbar() {\r\n    const { loggedInUser, logout } = useContext(UserContext);\r\n    const [isBurgerClicked, setisBurgerClicked] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const onLogout = async () => {\r\n        setisBurgerClicked(false);\r\n        await logout();\r\n        history.push('/');\r\n        Swal.fire('Logged out successfully.', '', 'success');\r\n    };\r\n\r\n    const onMenuClick = () => {\r\n        setisBurgerClicked(!isBurgerClicked);\r\n    };\r\n\r\n    const linksToDisplay = loggedInUser ? (\r\n        <>\r\n            <Link\r\n                className=\"user-profile\"\r\n                to={'/profile/' + loggedInUser._id}\r\n                onClick={() => setisBurgerClicked(false)}\r\n                title=\"Profile\"\r\n            >\r\n                <span>\r\n                    <img src={loggedInUser.imgUrl} alt=\"User\" />\r\n                </span>\r\n            </Link>\r\n            <Link className=\"logout\" onClick={onLogout} to={'/'}>\r\n                <span>Logout</span>\r\n            </Link>\r\n        </>\r\n    ) : (\r\n        <>\r\n            <Link to={'/login'} onClick={() => setisBurgerClicked(false)}>\r\n                <span>Login</span>\r\n            </Link>\r\n            <Link to={'/register'} onClick={() => setisBurgerClicked(false)}>\r\n                <span>Register</span>\r\n            </Link>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"wrapper container flex space-between align-center\">\r\n                <Link className=\"logo\" to=\"/\">\r\n                    Quizocode\r\n                </Link>\r\n                <section className={(isBurgerClicked ? 'menu-open ' : '') + 'nav-links flex align-center justify-end'}>\r\n                    {isBurgerClicked && (\r\n                        <span className=\"close-icon-container flex justify-end\">\r\n                            <span className=\"close-icon\" onClick={() => setisBurgerClicked(false)}>\r\n                                <FaWindowClose />\r\n                            </span>\r\n                        </span>\r\n                    )}\r\n                    <Link to=\"/\" onClick={() => setisBurgerClicked(false)}>\r\n                        <span>Home</span>\r\n                    </Link>\r\n                    <Link to=\"/ranking\" onClick={() => setisBurgerClicked(false)}>\r\n                        <span>Ranking</span>\r\n                    </Link>\r\n                    {linksToDisplay}\r\n                </section>\r\n                {!isBurgerClicked && <HiMenuAlt3 className=\"burger-icon\" onClick={e => onMenuClick(e)} />}\r\n            </div>\r\n            {isBurgerClicked && <span className=\"screen\" onClick={() => setisBurgerClicked(false)}></span>}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ErrPage() {\r\n    return (\r\n        <div className=\"err-page flex align-center justify-center flex-column\">\r\n            <h1>Oops... 404 Can't find this one!</h1>\r\n            <Link to=\"/\">Back to homepage</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrPage;\r\n","import React from 'react';\r\nimport { SiLinkedin, SiGithub } from 'react-icons/si';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer flex flex-column align-center justify-center\">\r\n            <p className=\"logo\">Quizocode</p>\r\n            <section className=\"rights flex align-center\">\r\n                <span>Created by Or Partush</span>\r\n                <a\r\n                    className=\"portfolio\"\r\n                    href=\"https://orpartush-portfolio.netlify.app/\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Portfolio\r\n                </a>\r\n                <section className=\"social-links\">\r\n                    <a href=\"https://www.linkedin.com/in/or-partush/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <SiLinkedin className=\"sl-icon\" />\r\n                    </a>\r\n                    <a href=\"https://github.com/orpartush?tab=repositories\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <SiGithub className=\"sl-icon\" />\r\n                    </a>\r\n                </section>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Suspense, lazy } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport { UserContextProvider } from './store/contexts/UserContext';\r\nimport { QuizContextProvider } from './store/contexts/QuizContext';\r\n\r\nimport Navbar from './cmps/Navbar';\r\nimport ErrPage from './pages/ErrPage';\r\nimport Footer from './cmps/Footer';\r\n\r\nconst HomePage = lazy(() => import('./pages/HomePage'));\r\nconst AuthPage = lazy(() => import('./pages/AuthPage'));\r\nconst RankPage = lazy(() => import('./pages/RankPage'));\r\nconst QuizPage = lazy(() => import('./pages/QuizPage'));\r\nconst AddQuestionPage = lazy(() => import('./pages/AddQuestionPage'));\r\nconst UserProfilePage = lazy(() => import('./pages/UserProfilePage'));\r\nconst EditProfilePage = lazy(() => import('./pages/EditProfilePage'));\r\n\r\nfunction App() {\r\n    return (\r\n        <UserContextProvider>\r\n            <QuizContextProvider>\r\n                <main className=\"app flex flex-column\">\r\n                    <Router>\r\n                        <Navbar />\r\n                        <Suspense fallback={<div>Loading...</div>}>\r\n                            <Switch>\r\n                                <Route exact path=\"/\" component={HomePage} />\r\n                                <Route exact path={['/login', '/register']} component={AuthPage} />\r\n                                <Route exact path=\"/ranking\" component={RankPage} />\r\n                                <Route exact path=\"/quiz/:category\" component={QuizPage} />\r\n                                <Route exact path=\"/add-question\" component={AddQuestionPage} />\r\n                                <Route exact path=\"/profile/:id\" component={UserProfilePage} />\r\n                                <Route exact path=\"/edit-profile/:id\" component={EditProfilePage} />\r\n                                <Route component={ErrPage} />\r\n                            </Switch>\r\n                        </Suspense>\r\n                        <Footer />\r\n                    </Router>\r\n                </main>\r\n            </QuizContextProvider>\r\n        </UserContextProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/global.scss';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}