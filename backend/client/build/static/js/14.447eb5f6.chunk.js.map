{"version":3,"sources":["services/CloudinaryService.js","pages/EditProfilePage.jsx"],"names":["CloudinaryService","uploadImg","uploaderValue","UPLOAD_URL","formData","FormData","append","fetch","method","body","then","res","json","catch","err","console","error","EditProfilePage","useContext","UserContext","loggedInUser","updateUser","useState","setUploaderValue","user","setUser","selectedTechs","setSelectedTechs","profileImg","setProfileImg","params","useParams","history","useHistory","useForm","mode","validationSchema","Yup","name","min","required","register","handleSubmit","useEffect","userId","id","a","UserService","getUser","currUser","currUserTechs","techs","map","tech","imgUrl","replace","getCurrUser","onSubmit","editedData","selectedTech","updatedUser","push","_id","Swal","fire","cloudinaryRes","url","onImgChange","className","src","alt","htmlFor","data-tip","place","type","effect","multiline","onChange","e","target","files","defaultValue","ref","role","options","selectedValues","onSelect","selectedList","selectedItem","log","onRemove","removedItem","displayValue","closeOnSelect","avoidHighlightFirstOption","style","multiselectContainer","minWidth","inputField","borderRadius","width","chips","backgroundColor","cols","rows","summery","to"],"mappings":"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","file":"static/js/14.447eb5f6.chunk.js","sourcesContent":["export const CloudinaryService = {\r\n    uploadImg,\r\n};\r\n\r\nfunction uploadImg(uploaderValue) {\r\n    const CLOUD_NAME = 'quizocode';\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`;\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', uploaderValue[0]);\r\n    formData.append('upload_preset', 'oklr6qvc');\r\n\r\n    return fetch(UPLOAD_URL, {\r\n        method: 'POST',\r\n        body: formData,\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => res)\r\n        .catch(err => console.error(err));\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams, useHistory, Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { UserContext } from '../store/contexts/UserContext';\r\nimport { UserService } from '../services/UserService.js';\r\nimport { CloudinaryService } from '../services/CloudinaryService.js';\r\n\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { AiOutlineInfoCircle } from 'react-icons/ai';\r\n\r\nfunction EditProfilePage() {\r\n    const options = [\r\n        { name: 'Javascript', id: 'Javascript' },\r\n        { name: 'React.js', id: 'React.js' },\r\n        { name: 'Angular.js', id: 'Angular.js' },\r\n        { name: 'Vue.js', id: 'Vue.js' },\r\n        { name: 'Redux', id: 'Redux' },\r\n        { name: 'Vuex', id: 'Vuex' },\r\n        { name: 'Electron.js', id: 'Electron.js' },\r\n        { name: 'SCSS', id: 'SCSS' },\r\n        { name: 'CSS3', id: 'CSS3' },\r\n        { name: 'HTML5', id: 'HTML5' },\r\n        { name: 'Node.js', id: 'Node.js' },\r\n        { name: 'MongoDB', id: 'MongoDB' },\r\n        { name: 'MySQL', id: 'MySQL' },\r\n        { name: 'JQuery', id: 'JQuery' },\r\n        { name: 'Cordova.js', id: 'Cordova.js' },\r\n        { name: 'Java', id: 'Java' },\r\n        { name: 'C', id: 'C' },\r\n        { name: 'C++', id: 'C++' },\r\n        { name: 'C#', id: 'C#' },\r\n        { name: 'Python', id: 'Python' },\r\n        { name: 'Django', id: 'Django' },\r\n        { name: '.NET', id: '.NET' },\r\n        { name: 'Git', id: 'Git' },\r\n        { name: 'Bitbucket', id: 'Bitbucket' },\r\n        { name: 'NPM', id: 'NPM' },\r\n        { name: 'Bootstrap', id: 'Bootstrap' },\r\n    ];\r\n    const { loggedInUser, updateUser } = useContext(UserContext);\r\n    const [uploaderValue, setUploaderValue] = useState('');\r\n    const [user, setUser] = useState(null);\r\n    const [selectedTechs, setSelectedTechs] = useState([]);\r\n    const [profileImg, setProfileImg] = useState('');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tooltipTxt = '1 : 1 ratio is preferred.';\r\n\r\n    const { register, handleSubmit } = useForm({\r\n        mode: 'onBlur',\r\n        validationSchema: Yup.object({\r\n            name: Yup.string().min(2, 'Name must have minimum of 2 characters').required(),\r\n        }),\r\n    });\r\n\r\n    useEffect(() => {\r\n        const userId = params.id;\r\n        const getCurrUser = async userId => {\r\n            let currUser = await UserService.getUser(userId);\r\n            let currUserTechs = currUser.techs.map(tech => {\r\n                return { name: tech, id: tech };\r\n            });\r\n            setSelectedTechs(currUserTechs);\r\n            if (currUser) {\r\n                setUser(currUser);\r\n                setProfileImg(currUser.imgUrl);\r\n            } else history.replace('/err-page');\r\n        };\r\n        getCurrUser(userId);\r\n    }, []);\r\n\r\n    const onSubmit = async editedData => {\r\n        editedData.techs = selectedTechs.map(selectedTech => selectedTech.name);\r\n        const updatedUser = { ...loggedInUser, ...editedData, imgUrl: profileImg };\r\n        await updateUser(updatedUser);\r\n\r\n        history.push(`/profile/${user._id}`);\r\n        Swal.fire('Profile updated successfully', '', 'success');\r\n    };\r\n\r\n    const onSelect = (selectedList, selectedItem) => {\r\n        console.log('selectedItem:', selectedItem);\r\n        setSelectedTechs([...selectedTechs, selectedItem]);\r\n    };\r\n\r\n    const onRemove = (selectedList, removedItem) => {\r\n        setSelectedTechs(selectedList);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const onImgChange = async () => {\r\n            const cloudinaryRes = await CloudinaryService.uploadImg(uploaderValue);\r\n            setProfileImg(cloudinaryRes.url);\r\n        };\r\n        if (uploaderValue === '') return;\r\n        onImgChange();\r\n    }, [uploaderValue]);\r\n\r\n    return (\r\n        <div className=\"edit-profile-page container\">\r\n            <header className=\"flex align-center\">\r\n                <div className=\"flex justify-center align-center\">\r\n                    <img src={profileImg} alt=\"\" />\r\n                    <p className=\"title\">Editing Profile</p>\r\n                </div>\r\n            </header>\r\n            {user ? (\r\n                <form className=\"flex flex-column\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"uploader-label-wrapper flex align-center\">\r\n                        <label className=\"uploader\" htmlFor=\"uploader\">\r\n                            Change picture\r\n                        </label>\r\n                        <span className=\"tip-icon\">\r\n                            <AiOutlineInfoCircle data-tip={tooltipTxt} />\r\n                            <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" multiline={true} className=\"tooltip\" />\r\n                        </span>\r\n                    </div>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"uploader\"\r\n                        id=\"uploader\"\r\n                        className=\"img-uploader\"\r\n                        onChange={e => setUploaderValue(e.target.files)}\r\n                    />\r\n                    <label htmlFor=\"name\" className=\"flex flex-column\">\r\n                        <span>Name:</span>\r\n                        <input type=\"text\" name=\"name\" defaultValue={user.name} ref={register} />\r\n                    </label>\r\n                    <label htmlFor=\"role\" className=\"flex flex-column\">\r\n                        <span>Role:</span>\r\n                        <input type=\"text\" name=\"role\" defaultValue={user.role} ref={register} />\r\n                    </label>\r\n                    <label htmlFor=\"techs\">\r\n                        <span>Techs:</span>\r\n                        <Multiselect\r\n                            options={options}\r\n                            selectedValues={selectedTechs}\r\n                            onSelect={onSelect}\r\n                            onRemove={onRemove}\r\n                            displayValue=\"name\"\r\n                            closeOnSelect={false}\r\n                            avoidHighlightFirstOption={true}\r\n                            style={{\r\n                                multiselectContainer: {\r\n                                    minWidth: '100%',\r\n                                },\r\n                                inputField: {\r\n                                    borderRadius: '5px',\r\n                                    width: '100px',\r\n                                },\r\n                                chips: {\r\n                                    width: 'fit-content',\r\n                                    backgroundColor: '#fc335d',\r\n                                },\r\n                            }}\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"summery\" className=\"flex flex-column\">\r\n                        <span>Summery:</span>\r\n                        <textarea type=\"text\" name=\"summery\" cols=\"60\" rows=\"6\" defaultValue={user.summery} ref={register} />\r\n                    </label>\r\n                    <section className=\"btns\">\r\n                        <button className=\"submit-btn\" type=\"submit\">\r\n                            Save Changes\r\n                        </button>\r\n                        <Link className=\"cancel-btn\" to={`/profile/${user._id}`}>\r\n                            Cancel\r\n                        </Link>\r\n                    </section>\r\n                </form>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditProfilePage;\r\n"],"sourceRoot":""}