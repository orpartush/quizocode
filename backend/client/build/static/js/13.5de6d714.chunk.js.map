{"version":3,"sources":["cmps/LoginForm.jsx","cmps/RegisterForm.jsx","pages/AuthPage.jsx"],"names":["LoginForm","useContext","UserContext","onLogin","loggedInUser","useForm","register","handleSubmit","history","useHistory","superGuest","email","password","useEffect","Swal","fire","push","onSubmit","userCred","a","className","type","placeholder","name","ref","to","data-tip","place","effect","multiline","onClick","RegisterForm","onSignup","useState","isUserExist","setIsUserExist","mode","validationSchema","Yup","required","min","errors","message","AuthPage","window","location","pathname","formToDisplay","setForm"],"mappings":"oOA4DeA,MApDf,WAAsB,IAAD,EACiBC,qBAAWC,KAArCC,EADS,EACTA,QAASC,EADA,EACAA,aADA,EAEkBC,cAA3BC,EAFS,EAETA,SAAUC,EAFD,EAECA,aAEZC,EAAUC,cACVC,EAAa,CACfC,MAAO,iBACPC,SAAU,UAIdC,qBAAU,WACFT,IACAU,IAAKC,KAAK,gBAAiB,yBAA0B,WACrDP,EAAQQ,KAAK,QAElB,CAACZ,EAAcI,IAElB,IAAMS,EAAQ,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sEACPhB,EAAQe,GADD,UAERd,EAFQ,uBAGTU,IAAKC,KAAK,cAAe,2BAA4B,SAH5C,8DAAH,sDAQd,OACI,yBAAKK,UAAU,cACX,0BAAMA,UAAU,gCAAgCH,SAAUV,EAAaU,IACnE,2BAAOI,KAAK,QAAQC,YAAY,QAAQC,KAAK,QAAQC,IAAKlB,IAC1D,2BAAOe,KAAK,WAAWC,YAAY,WAAWC,KAAK,WAAWC,IAAKlB,IACnE,yCACA,gDACkB,kBAAC,IAAD,CAAMmB,GAAG,aAAT,cAGtB,6BAASL,UAAU,6CACf,yBAAKA,UAAU,yBACX,0BAAMA,UAAU,oBACZ,kBAAC,IAAD,CAAqBM,WA9BzB,6IAgCA,kBAAC,IAAD,CAAcC,MAAM,MAAMN,KAAK,OAAOO,OAAO,QAAQC,WAAW,EAAMT,UAAU,YAChF,8FAEJ,4BAAQA,UAAU,kBAAkBU,QAAS,kBAAMb,EAASP,KAA5D,2B,SCADqB,MA5Cf,WAAyB,IACbC,EAAa/B,qBAAWC,KAAxB8B,SADY,EAEkBC,oBAAS,GAF3B,mBAEbC,EAFa,KAEAC,EAFA,KAGd3B,EAAUC,cAHI,EAIuBJ,YAAQ,CAC/C+B,KAAM,SACNC,iBAAkBC,IAAW,CACzB3B,MAAO2B,MAAa3B,QAAQ4B,SAAS,qBACrChB,KAAMe,MAAaE,IAAI,EAAG,0CAA0CD,WACpE3B,SAAU0B,MAAaE,IAAI,EAAG,8CAA8CD,eAL5EjC,EAJY,EAIZA,SAAUC,EAJE,EAIFA,aAAckC,EAJZ,EAIYA,OAS1BxB,EAAQ,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sEACMa,EAASd,GADf,wCAGTiB,GAAe,GAHN,0BAMbrB,IAAKC,KAAK,WAAY,0CAA2C,WACjEP,EAAQQ,KAAK,KAPA,2CAAH,sDAUd,OACI,yBAAKI,UAAU,iBACX,0BAAMA,UAAU,mBAAmBH,SAAUV,EAAaU,IACtD,2BAAOI,KAAK,QAAQC,YAAY,QAAQC,KAAK,QAAQC,IAAKlB,IAC1D,2BAAOe,KAAK,OAAOC,YAAY,OAAOC,KAAK,OAAOC,IAAKlB,IACvD,2BAAOe,KAAK,WAAWC,YAAY,WAAWC,KAAK,WAAWC,IAAKlB,IACnE,6BAASc,UAAU,mCACdqB,EAAO9B,OAAS,+BAAQ8B,EAAO9B,MAAM+B,SACrCD,EAAOlB,MAAQ,+BAAQkB,EAAOlB,KAAKmB,SACnCD,EAAO7B,UAAY,+BAAQ6B,EAAO7B,SAAS8B,UAC1CR,GAAe,uDAErB,4CACA,oDACsB,kBAAC,IAAD,CAAMT,GAAG,UAAT,aCxBvBkB,UAhBf,WAAqB,IAAD,EACiBV,mBAASW,OAAOC,SAASC,UAD1C,mBACTC,EADS,KACMC,EADN,KAERH,EAAapC,cAAboC,SAMR,OAJAhC,qBAAU,WACgB,WAAtBgC,EAASC,SAAwBE,EAAQ,SAAWA,EAAQ,cAC7D,CAACH,EAASC,WAGT,yBAAK1B,UAAU,0DACX,wBAAIA,UAAU,sBAAd,aACmB,UAAlB2B,EAA4B,kBAAC,EAAD,MAAgB,kBAAC,EAAD","file":"static/js/13.5de6d714.chunk.js","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../store/contexts/UserContext';\r\nimport Swal from 'sweetalert2';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { AiOutlineInfoCircle } from 'react-icons/ai';\r\n\r\nfunction LoginForm() {\r\n    const { onLogin, loggedInUser } = useContext(UserContext);\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    const history = useHistory();\r\n    const superGuest = {\r\n        email: 'test@gmail.com',\r\n        password: '123456',\r\n    };\r\n    const tooltipTxt = `Super-guest allows you to skip the registration process, logs you in with a pre-made account, with full access to Quizocode's features.`;\r\n\r\n    useEffect(() => {\r\n        if (loggedInUser) {\r\n            Swal.fire('Welcome back!', 'Logged in successfully', 'success');\r\n            history.push('/');\r\n        }\r\n    }, [loggedInUser, history]);\r\n\r\n    const onSubmit = async userCred => {\r\n        await onLogin(userCred);\r\n        if (!loggedInUser) {\r\n            Swal.fire('Login error', 'Bad username or password', 'error');\r\n            return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-form\">\r\n            <form className=\"flex flex-column align-center\" onSubmit={handleSubmit(onSubmit)}>\r\n                <input type=\"email\" placeholder=\"Email\" name=\"email\" ref={register} />\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" ref={register} />\r\n                <button>LOGIN</button>\r\n                <small>\r\n                    Not a member? <Link to=\"/register\">Register</Link>\r\n                </small>\r\n            </form>\r\n            <section className=\"super-guest flex flex-column align-center\">\r\n                <div className=\"super-guest-desc flex\">\r\n                    <span className=\"tip-icon-wrapper\">\r\n                        <AiOutlineInfoCircle data-tip={tooltipTxt} />\r\n                    </span>\r\n                    <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" multiline={true} className=\"tooltip\" />\r\n                    <span>For your convenience, you can login as super-guest account:</span>\r\n                </div>\r\n                <button className=\"super-guest-btn\" onClick={() => onSubmit(superGuest)}>\r\n                    LOGIN AS SUPER-GUEST\r\n                </button>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../store/contexts/UserContext';\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport * as Yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction RegisterForm() {\r\n    const { onSignup } = useContext(UserContext);\r\n    const [isUserExist, setIsUserExist] = useState(true);\r\n    const history = useHistory();\r\n    const { register, handleSubmit, errors } = useForm({\r\n        mode: 'onBlur',\r\n        validationSchema: Yup.object({\r\n            email: Yup.string().email().required('Email is required'),\r\n            name: Yup.string().min(2, 'Name must have minimum of 2 characters').required(),\r\n            password: Yup.string().min(6, 'Password must have minimum of 6 characters').required(),\r\n        }),\r\n    });\r\n\r\n    const onSubmit = async userCred => {\r\n        const user = await onSignup(userCred);\r\n        if (!user) {\r\n            setIsUserExist(false);\r\n            return;\r\n        }\r\n        Swal.fire('Welcome!', 'Start your improvment with our quizzes!', 'success');\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"register-form\">\r\n            <form className=\"flex flex-column\" onSubmit={handleSubmit(onSubmit)}>\r\n                <input type=\"email\" placeholder=\"Email\" name=\"email\" ref={register} />\r\n                <input type=\"text\" placeholder=\"Name\" name=\"name\" ref={register} />\r\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" ref={register} />\r\n                <section className=\"errs-container flex flex-column\">\r\n                    {errors.email && <small>{errors.email.message}</small>}\r\n                    {errors.name && <small>{errors.name.message}</small>}\r\n                    {errors.password && <small>{errors.password.message}</small>}\r\n                    {!isUserExist && <small>Email already exist</small>}\r\n                </section>\r\n                <button>REGISTER</button>\r\n                <small>\r\n                    Already a member? <Link to=\"/login\">Login</Link>\r\n                </small>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport LoginForm from '../cmps/LoginForm';\r\nimport RegisterForm from '../cmps/RegisterForm';\r\n\r\nfunction AuthPage() {\r\n    const [formToDisplay, setForm] = useState(window.location.pathname);\r\n    const { location } = useHistory();\r\n\r\n    useEffect(() => {\r\n        location.pathname === '/login' ? setForm('login') : setForm('register');\r\n    }, [location.pathname]);\r\n\r\n    return (\r\n        <div className=\"auth-page flex flex-column align-center justify-center\">\r\n            <h1 className=\"title align-center\">Quizocode</h1>\r\n            {formToDisplay === 'login' ? <LoginForm /> : <RegisterForm />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;\r\n"],"sourceRoot":""}